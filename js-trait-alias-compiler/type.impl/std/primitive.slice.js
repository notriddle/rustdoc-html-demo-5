(function() {var type_impls = {
"rustc_hir":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/mod.rs.html#4640\">source</a></span><a href=\"#impl-Default-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/mod.rs.html#4642\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.default\" class=\"fn\">default</a>() -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Creates an empty slice.</p>\n</div></details></div></details>","Default","rustc_hir::hir::GenericBounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%26'a+%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#21\">source</a></span><a href=\"#impl-IntoIterator-for-%26'a+%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#25\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","rustc_hir::hir::GenericBounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BA;+N%5D%3E-for-%26%5BB%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#81\">source</a></span><a href=\"#impl-PartialEq%3C%5BA;+N%5D%3E-for-%26%5BB%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[A; N]</a>&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[B]</a><span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;A&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#86\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[A; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#90\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[A; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_hir::hir::GenericBounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a></span><a href=\"#impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><span class=\"where fmt-newline\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_hir::hir::GenericBounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"impl\"><a href=\"#impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;Vec&lt;U, A&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><span class=\"where fmt-newline\">where\n    A: Allocator,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Vec&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;Vec&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_hir::hir::GenericBounds"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CZeroSlice%3CT%3E%3E-for-%26%5B%3CT+as+AsULE%3E::ULE%5D\" class=\"impl\"><a href=\"#impl-AsRef%3CZeroSlice%3CT%3E%3E-for-%26%5B%3CT+as+AsULE%3E::ULE%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;ZeroSlice&lt;T&gt;&gt; for &amp;[&lt;T as AsULE&gt;::ULE]<span class=\"where fmt-newline\">where\n    T: AsULE,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;ZeroSlice&lt;T&gt;</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef","rustc_hir::hir::GenericBounds"]],
"rustc_middle":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/mod.rs.html#4640\">source</a></span><a href=\"#impl-Default-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/mod.rs.html#4642\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.default\" class=\"fn\">default</a>() -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Creates an empty slice.</p>\n</div></details></div></details>","Default","rustc_middle::query::queries::opaque_types_defined_by::Value","rustc_middle::query::queries::opaque_types_defined_by::ProvidedValue","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::inherent_impls::Value","rustc_middle::query::queries::inherent_impls::ProvidedValue","rustc_middle::query::queries::incoherent_impls::Value","rustc_middle::query::queries::incoherent_impls::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::crate_incoherent_impls::Value","rustc_middle::query::queries::crate_incoherent_impls::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lib_features::Value","rustc_middle::query::queries::defined_lib_features::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%26'a+%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#21\">source</a></span><a href=\"#impl-IntoIterator-for-%26'a+%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#25\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","rustc_middle::query::queries::opaque_types_defined_by::Value","rustc_middle::query::queries::opaque_types_defined_by::ProvidedValue","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::inherent_impls::Value","rustc_middle::query::queries::inherent_impls::ProvidedValue","rustc_middle::query::queries::incoherent_impls::Value","rustc_middle::query::queries::incoherent_impls::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::crate_incoherent_impls::Value","rustc_middle::query::queries::crate_incoherent_impls::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lib_features::Value","rustc_middle::query::queries::defined_lib_features::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BA;+N%5D%3E-for-%26%5BB%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#81\">source</a></span><a href=\"#impl-PartialEq%3C%5BA;+N%5D%3E-for-%26%5BB%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[A; N]</a>&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[B]</a><span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;A&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#86\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[A; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#90\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[A; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_middle::query::queries::opaque_types_defined_by::Value","rustc_middle::query::queries::opaque_types_defined_by::ProvidedValue","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::inherent_impls::Value","rustc_middle::query::queries::inherent_impls::ProvidedValue","rustc_middle::query::queries::incoherent_impls::Value","rustc_middle::query::queries::incoherent_impls::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::crate_incoherent_impls::Value","rustc_middle::query::queries::crate_incoherent_impls::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lib_features::Value","rustc_middle::query::queries::defined_lib_features::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a></span><a href=\"#impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><span class=\"where fmt-newline\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_middle::query::queries::opaque_types_defined_by::Value","rustc_middle::query::queries::opaque_types_defined_by::ProvidedValue","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::inherent_impls::Value","rustc_middle::query::queries::inherent_impls::ProvidedValue","rustc_middle::query::queries::incoherent_impls::Value","rustc_middle::query::queries::incoherent_impls::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::crate_incoherent_impls::Value","rustc_middle::query::queries::crate_incoherent_impls::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lib_features::Value","rustc_middle::query::queries::defined_lib_features::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"impl\"><a href=\"#impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;Vec&lt;U, A&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><span class=\"where fmt-newline\">where\n    A: Allocator,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Vec&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;Vec&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_middle::query::queries::opaque_types_defined_by::Value","rustc_middle::query::queries::opaque_types_defined_by::ProvidedValue","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::inherent_impls::Value","rustc_middle::query::queries::inherent_impls::ProvidedValue","rustc_middle::query::queries::incoherent_impls::Value","rustc_middle::query::queries::incoherent_impls::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::crate_incoherent_impls::Value","rustc_middle::query::queries::crate_incoherent_impls::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lib_features::Value","rustc_middle::query::queries::defined_lib_features::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CZeroSlice%3CT%3E%3E-for-%26%5B%3CT+as+AsULE%3E::ULE%5D\" class=\"impl\"><a href=\"#impl-AsRef%3CZeroSlice%3CT%3E%3E-for-%26%5B%3CT+as+AsULE%3E::ULE%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;ZeroSlice&lt;T&gt;&gt; for &amp;[&lt;T as AsULE&gt;::ULE]<span class=\"where fmt-newline\">where\n    T: AsULE,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;ZeroSlice&lt;T&gt;</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef","rustc_middle::query::queries::opaque_types_defined_by::Value","rustc_middle::query::queries::opaque_types_defined_by::ProvidedValue","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::inherent_impls::Value","rustc_middle::query::queries::inherent_impls::ProvidedValue","rustc_middle::query::queries::incoherent_impls::Value","rustc_middle::query::queries::incoherent_impls::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::crate_incoherent_impls::Value","rustc_middle::query::queries::crate_incoherent_impls::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lib_features::Value","rustc_middle::query::queries::defined_lib_features::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26'tcx+%5BAttribute%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#822-831\">source</a><a href=\"#impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26'tcx+%5BAttribute%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;<a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;&gt; for &amp;'tcx [<a class=\"struct\" href=\"rustc_ast/ast/struct.Attribute.html\" title=\"struct rustc_ast::ast::Attribute\">Attribute</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#822-831\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.decode\" class=\"fn\">decode</a>(d: &amp;mut <a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;) -&gt; Self</h4></section></div></details>","Decodable","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParameterizedOverTcx-for-%26'static+%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/parameterized.rs.html#11-13\">source</a><a href=\"#impl-ParameterizedOverTcx-for-%26'static+%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html\" title=\"trait rustc_middle::ty::parameterized::ParameterizedOverTcx\">ParameterizedOverTcx</a>&gt; <a class=\"trait\" href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html\" title=\"trait rustc_middle::ty::parameterized::ParameterizedOverTcx\">ParameterizedOverTcx</a> for &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Value\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Value\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Value\" class=\"associatedtype\">Value</a>&lt;'tcx&gt; = &amp;'tcx [&lt;T as <a class=\"trait\" href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html\" title=\"trait rustc_middle::ty::parameterized::ParameterizedOverTcx\">ParameterizedOverTcx</a>&gt;::<a class=\"associatedtype\" href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html#associatedtype.Value\" title=\"type rustc_middle::ty::parameterized::ParameterizedOverTcx::Value\">Value</a>&lt;'tcx&gt;]</h4></section></div></details>","ParameterizedOverTcx","rustc_middle::query::queries::opaque_types_defined_by::Value","rustc_middle::query::queries::opaque_types_defined_by::ProvidedValue","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::inherent_impls::Value","rustc_middle::query::queries::inherent_impls::ProvidedValue","rustc_middle::query::queries::incoherent_impls::Value","rustc_middle::query::queries::incoherent_impls::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::crate_incoherent_impls::Value","rustc_middle::query::queries::crate_incoherent_impls::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lib_features::Value","rustc_middle::query::queries::defined_lib_features::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26'tcx+%5BLocalDefId%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#822-831\">source</a><a href=\"#impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26'tcx+%5BLocalDefId%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;<a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;&gt; for &amp;'tcx [<a class=\"struct\" href=\"rustc_span/def_id/struct.LocalDefId.html\" title=\"struct rustc_span::def_id::LocalDefId\">LocalDefId</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#822-831\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.decode\" class=\"fn\">decode</a>(d: &amp;mut <a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;) -&gt; Self</h4></section></div></details>","Decodable","rustc_middle::query::queries::opaque_types_defined_by::Value","rustc_middle::query::queries::opaque_types_defined_by::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26'tcx+%5B(Clause%3C'tcx%3E,+Span)%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#797-802\">source</a><a href=\"#impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26'tcx+%5B(Clause%3C'tcx%3E,+Span)%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;<a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;&gt; for &amp;'tcx [(<a class=\"struct\" href=\"rustc_middle/ty/struct.Clause.html\" title=\"struct rustc_middle::ty::Clause\">Clause</a>&lt;'tcx&gt;, <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>)]</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#799-801\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.decode\" class=\"fn\">decode</a>(d: &amp;mut <a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;) -&gt; Self</h4></section></div></details>","Decodable","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26'tcx+%5BDefId%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#822-831\">source</a><a href=\"#impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26'tcx+%5BDefId%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;<a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;&gt; for &amp;'tcx [<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#822-831\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.decode\" class=\"fn\">decode</a>(d: &amp;mut <a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;) -&gt; Self</h4></section></div></details>","Decodable","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::inherent_impls::Value","rustc_middle::query::queries::inherent_impls::ProvidedValue","rustc_middle::query::queries::incoherent_impls::Value","rustc_middle::query::queries::incoherent_impls::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::crate_incoherent_impls::Value","rustc_middle::query::queries::crate_incoherent_impls::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-%26%5BT%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#51-53\">source</a><a href=\"#impl-EraseType-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">16</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::opaque_types_defined_by::Value","rustc_middle::query::queries::opaque_types_defined_by::ProvidedValue","rustc_middle::query::queries::inferred_outlives_of::Value","rustc_middle::query::queries::inferred_outlives_of::ProvidedValue","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue","rustc_middle::query::queries::associated_item_def_ids::Value","rustc_middle::query::queries::associated_item_def_ids::ProvidedValue","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::Value","rustc_middle::query::queries::associated_types_for_impl_traits_in_associated_fn::ProvidedValue","rustc_middle::query::queries::inherent_impls::Value","rustc_middle::query::queries::inherent_impls::ProvidedValue","rustc_middle::query::queries::incoherent_impls::Value","rustc_middle::query::queries::incoherent_impls::ProvidedValue","rustc_middle::query::queries::assumed_wf_types::Value","rustc_middle::query::queries::assumed_wf_types::ProvidedValue","rustc_middle::query::queries::assumed_wf_types_for_rpitit::Value","rustc_middle::query::queries::assumed_wf_types_for_rpitit::ProvidedValue","rustc_middle::query::queries::mir_inliner_callees::Value","rustc_middle::query::queries::mir_inliner_callees::ProvidedValue","rustc_middle::query::queries::item_attrs::Value","rustc_middle::query::queries::item_attrs::ProvidedValue","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue","rustc_middle::query::queries::own_existential_vtable_entries::Value","rustc_middle::query::queries::own_existential_vtable_entries::ProvidedValue","rustc_middle::query::queries::vtable_entries::Value","rustc_middle::query::queries::vtable_entries::ProvidedValue","rustc_middle::query::queries::object_safety_violations::Value","rustc_middle::query::queries::object_safety_violations::ProvidedValue","rustc_middle::query::queries::dylib_dependency_formats::Value","rustc_middle::query::queries::dylib_dependency_formats::ProvidedValue","rustc_middle::query::queries::implementations_of_trait::Value","rustc_middle::query::queries::implementations_of_trait::ProvidedValue","rustc_middle::query::queries::crate_incoherent_impls::Value","rustc_middle::query::queries::crate_incoherent_impls::ProvidedValue","rustc_middle::query::queries::module_children::Value","rustc_middle::query::queries::module_children::ProvidedValue","rustc_middle::query::queries::defined_lib_features::Value","rustc_middle::query::queries::defined_lib_features::ProvidedValue","rustc_middle::query::queries::defined_lang_items::Value","rustc_middle::query::queries::defined_lang_items::ProvidedValue","rustc_middle::query::queries::missing_lang_items::Value","rustc_middle::query::queries::missing_lang_items::ProvidedValue","rustc_middle::query::queries::postorder_cnums::Value","rustc_middle::query::queries::postorder_cnums::ProvidedValue","rustc_middle::query::queries::crates::Value","rustc_middle::query::queries::crates::ProvidedValue","rustc_middle::query::queries::traits::Value","rustc_middle::query::queries::traits::ProvidedValue","rustc_middle::query::queries::trait_impls_in_crate::Value","rustc_middle::query::queries::trait_impls_in_crate::ProvidedValue","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue","rustc_middle::query::queries::doc_link_traits_in_scope::Value","rustc_middle::query::queries::doc_link_traits_in_scope::ProvidedValue","rustc_middle::query::queries::stripped_cfg_items::Value","rustc_middle::query::queries::stripped_cfg_items::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26'tcx+%5BDeducedParamAttrs%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#822-831\">source</a><a href=\"#impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26'tcx+%5BDeducedParamAttrs%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;<a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;&gt; for &amp;'tcx [<a class=\"struct\" href=\"rustc_middle/ty/context/struct.DeducedParamAttrs.html\" title=\"struct rustc_middle::ty::context::DeducedParamAttrs\">DeducedParamAttrs</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#822-831\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.decode\" class=\"fn\">decode</a>(d: &amp;mut <a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;) -&gt; Self</h4></section></div></details>","Decodable","rustc_middle::query::queries::deduced_param_attrs::Value","rustc_middle::query::queries::deduced_param_attrs::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26'tcx+%5B(ExportedSymbol%3C'tcx%3E,+SymbolExportInfo)%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#822-831\">source</a><a href=\"#impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26'tcx+%5B(ExportedSymbol%3C'tcx%3E,+SymbolExportInfo)%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;<a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;&gt; for &amp;'tcx [(<a class=\"enum\" href=\"rustc_middle/middle/exported_symbols/enum.ExportedSymbol.html\" title=\"enum rustc_middle::middle::exported_symbols::ExportedSymbol\">ExportedSymbol</a>&lt;'tcx&gt;, <a class=\"struct\" href=\"rustc_middle/middle/exported_symbols/struct.SymbolExportInfo.html\" title=\"struct rustc_middle::middle::exported_symbols::SymbolExportInfo\">SymbolExportInfo</a>)]</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#822-831\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.decode\" class=\"fn\">decode</a>(d: &amp;mut <a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;) -&gt; Self</h4></section></div></details>","Decodable","rustc_middle::query::queries::exported_symbols::Value","rustc_middle::query::queries::exported_symbols::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26'tcx+%5BVariance%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#822-831\">source</a><a href=\"#impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26'tcx+%5BVariance%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;<a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;&gt; for &amp;'tcx [<a class=\"enum\" href=\"rustc_middle/ty/enum.Variance.html\" title=\"enum rustc_middle::ty::Variance\">Variance</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#822-831\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.decode\" class=\"fn\">decode</a>(d: &amp;mut <a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;) -&gt; Self</h4></section></div></details>","Decodable","rustc_middle::query::queries::variances_of::Value","rustc_middle::query::queries::variances_of::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26'tcx+%5BIdent%5D\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#822-831\">source</a><a href=\"#impl-Decodable%3CCacheDecoder%3C'a,+'tcx%3E%3E-for-%26'tcx+%5BIdent%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;<a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;&gt; for &amp;'tcx [<a class=\"struct\" href=\"rustc_span/symbol/struct.Ident.html\" title=\"struct rustc_span::symbol::Ident\">Ident</a>]</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/on_disk_cache.rs.html#822-831\">source</a><a href=\"#method.decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.decode\" class=\"fn\">decode</a>(d: &amp;mut <a class=\"struct\" href=\"rustc_middle/query/on_disk_cache/struct.CacheDecoder.html\" title=\"struct rustc_middle::query::on_disk_cache::CacheDecoder\">CacheDecoder</a>&lt;'a, 'tcx&gt;) -&gt; Self</h4></section></div></details>","Decodable","rustc_middle::query::queries::fn_arg_names::Value","rustc_middle::query::queries::fn_arg_names::ProvidedValue"]],
"rustc_session":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/mod.rs.html#4640\">source</a></span><a href=\"#impl-Default-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/mod.rs.html#4642\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.default\" class=\"fn\">default</a>() -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Creates an empty slice.</p>\n</div></details></div></details>","Default","rustc_session::options::OptionDescrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-%26'a+%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#21\">source</a></span><a href=\"#impl-IntoIterator-for-%26'a+%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a T</a></h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/slice/iter.rs.html#25\">source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;</h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","rustc_session::options::OptionDescrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BA;+N%5D%3E-for-%26%5BB%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#81\">source</a></span><a href=\"#impl-PartialEq%3C%5BA;+N%5D%3E-for-%26%5BB%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[A; N]</a>&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[B]</a><span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;A&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#86\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[A; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/array/equality.rs.html#90\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">[A; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_session::options::OptionDescrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.46.0\">1.46.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a></span><a href=\"#impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><span class=\"where fmt-newline\">where\n    A: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/alloc/vec/partial_eq.rs.html#26\">source</a><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_session::options::OptionDescrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"impl\"><a href=\"#impl-PartialEq%3CVec%3CU,+A%3E%3E-for-%26%5BT%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, A&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;Vec&lt;U, A&gt;&gt; for &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a><span class=\"where fmt-newline\">where\n    A: Allocator,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;U&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Vec&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#method.ne\" class=\"fn\">ne</a>(&amp;self, other: &amp;Vec&lt;U, A&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_session::options::OptionDescrs"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CZeroSlice%3CT%3E%3E-for-%26%5B%3CT+as+AsULE%3E::ULE%5D\" class=\"impl\"><a href=\"#impl-AsRef%3CZeroSlice%3CT%3E%3E-for-%26%5B%3CT+as+AsULE%3E::ULE%5D\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;ZeroSlice&lt;T&gt;&gt; for &amp;[&lt;T as AsULE&gt;::ULE]<span class=\"where fmt-newline\">where\n    T: AsULE,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;ZeroSlice&lt;T&gt;</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef","rustc_session::options::OptionDescrs"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()