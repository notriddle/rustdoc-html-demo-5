(function() {var type_impls = {
"rustc_codegen_ssa":[],
"rustc_expand":[],
"rustc_hir":[],
"rustc_infer":[],
"rustc_middle":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParameterizedOverTcx-for-FxHashMap%3CI,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/parameterized.rs.html#27-29\">source</a><a href=\"#impl-ParameterizedOverTcx-for-FxHashMap%3CI,+T%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;I: 'static, T: <a class=\"trait\" href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html\" title=\"trait rustc_middle::ty::parameterized::ParameterizedOverTcx\">ParameterizedOverTcx</a>&gt; <a class=\"trait\" href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html\" title=\"trait rustc_middle::ty::parameterized::ParameterizedOverTcx\">ParameterizedOverTcx</a> for FxHashMap&lt;I, T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Value-37\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Value-37\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Value\" class=\"associatedtype\">Value</a>&lt;'tcx&gt; = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;I, &lt;T as <a class=\"trait\" href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html\" title=\"trait rustc_middle::ty::parameterized::ParameterizedOverTcx\">ParameterizedOverTcx</a>&gt;::<a class=\"associatedtype\" href=\"rustc_middle/ty/parameterized/trait.ParameterizedOverTcx.html#associatedtype.Value\" title=\"type rustc_middle::ty::parameterized::ParameterizedOverTcx::Value\">Value</a>&lt;'tcx&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/hash/struct.BuildHasherDefault.html\" title=\"struct core::hash::BuildHasherDefault\">BuildHasherDefault</a>&lt;FxHasher&gt;&gt;</h4></section></div></details>","ParameterizedOverTcx","rustc_middle::mir::basic_blocks::SwitchSources"]],
"rustc_monomorphize":[],
"rustc_query_system":[],
"rustc_resolve":[],
"rustdoc":[]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()