(function() {var type_impls = {
"rustc_symbol_mangling":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.GENERALIZE_POINTERS\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.GENERALIZE_POINTERS\" class=\"constant\">GENERALIZE_POINTERS</a>: Self = _</h4></section><section id=\"associatedconstant.GENERALIZE_REPR_C\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.GENERALIZE_REPR_C\" class=\"constant\">GENERALIZE_REPR_C</a>: Self = _</h4></section><section id=\"associatedconstant.NORMALIZE_INTEGERS\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.NORMALIZE_INTEGERS\" class=\"constant\">NORMALIZE_INTEGERS</a>: Self = _</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const fn <a href=\"#method.empty\" class=\"fn\">empty</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns an empty set of flags.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.all\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const fn <a href=\"#method.all\" class=\"fn\">all</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the set containing all flags.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bits\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const fn <a href=\"#method.bits\" class=\"fn\">bits</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a></h4></section></summary><div class=\"docblock\"><p>Returns the raw value of the flags currently stored.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const fn <a href=\"#method.from_bits\" class=\"fn\">from_bits</a>(bits: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits_truncate\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const fn <a href=\"#method.from_bits_truncate\" class=\"fn\">from_bits_truncate</a>(bits: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_bits_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"#method.from_bits_unchecked\" class=\"fn\">from_bits_unchecked</a>(bits: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\">u32</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Convert from underlying bit representation, preserving all\nbits (even those not corresponding to a defined flag).</p>\n<h5 id=\"safety\"><a href=\"#safety\">Safety</a></h5>\n<p>The caller of the <code>bitflags!</code> macro can chose to allow or\ndisallow extra bits for their bitflags type.</p>\n<p>The caller of <code>from_bits_unchecked()</code> has to ensure that\nall bits correspond to a defined flag or that extra bits\nare valid for this bitflags type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const fn <a href=\"#method.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if no flags are currently stored.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_all\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const fn <a href=\"#method.is_all\" class=\"fn\">is_all</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all flags are currently set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersects\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const fn <a href=\"#method.intersects\" class=\"fn\">intersects</a>(&amp;self, other: Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if there are flags common to both <code>self</code> and <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const fn <a href=\"#method.contains\" class=\"fn\">contains</a>(&amp;self, other: Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all of the flags in <code>other</code> are contained within <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.insert\" class=\"fn\">insert</a>(&amp;mut self, other: Self)</h4></section></summary><div class=\"docblock\"><p>Inserts the specified flags in-place.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.remove\" class=\"fn\">remove</a>(&amp;mut self, other: Self)</h4></section></summary><div class=\"docblock\"><p>Removes the specified flags in-place.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.toggle\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.toggle\" class=\"fn\">toggle</a>(&amp;mut self, other: Self)</h4></section></summary><div class=\"docblock\"><p>Toggles the specified flags in-place.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.set\" class=\"fn\">set</a>(&amp;mut self, other: Self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class=\"docblock\"><p>Inserts or removes the specified flags depending on the passed value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersection\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const fn <a href=\"#method.intersection\" class=\"fn\">intersection</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the intersection between the flags in <code>self</code> and\n<code>other</code>.</p>\n<p>Specifically, the returned set contains only the flags which are\npresent in <em>both</em> <code>self</code> <em>and</em> <code>other</code>.</p>\n<p>This is equivalent to using the <code>&amp;</code> operator (e.g.\n<a href=\"https://doc.rust-lang.org/std/ops/trait.BitAnd.html\"><code>ops::BitAnd</code></a>), as in <code>flags &amp; other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const fn <a href=\"#method.union\" class=\"fn\">union</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the union of between the flags in <code>self</code> and <code>other</code>.</p>\n<p>Specifically, the returned set contains all flags which are\npresent in <em>either</em> <code>self</code> <em>or</em> <code>other</code>, including any which are\npresent in both (see <a href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html#method.symmetric_difference\" title=\"method rustc_symbol_mangling::typeid::TypeIdOptions::symmetric_difference\"><code>Self::symmetric_difference</code></a> if that\nis undesirable).</p>\n<p>This is equivalent to using the <code>|</code> operator (e.g.\n<a href=\"https://doc.rust-lang.org/std/ops/trait.BitOr.html\"><code>ops::BitOr</code></a>), as in <code>flags | other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.difference\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const fn <a href=\"#method.difference\" class=\"fn\">difference</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the difference between the flags in <code>self</code> and <code>other</code>.</p>\n<p>Specifically, the returned set contains all flags present in\n<code>self</code>, except for the ones present in <code>other</code>.</p>\n<p>It is also conceptually equivalent to the โbit-clearโ operation:\n<code>flags &amp; !other</code> (and this syntax is also supported).</p>\n<p>This is equivalent to using the <code>-</code> operator (e.g.\n<a href=\"https://doc.rust-lang.org/std/ops/trait.Sub.html\"><code>ops::Sub</code></a>), as in <code>flags - other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.symmetric_difference\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const fn <a href=\"#method.symmetric_difference\" class=\"fn\">symmetric_difference</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the <a href=\"https://en.wikipedia.org/wiki/Symmetric_difference\">symmetric difference</a> between the flags\nin <code>self</code> and <code>other</code>.</p>\n<p>Specifically, the returned set contains the flags present which\nare present in <code>self</code> or <code>other</code>, but that are not present in\nboth. Equivalently, it contains the flags present in <em>exactly\none</em> of the sets <code>self</code> and <code>other</code>.</p>\n<p>This is equivalent to using the <code>^</code> operator (e.g.\n<a href=\"https://doc.rust-lang.org/std/ops/trait.BitXor.html\"><code>ops::BitXor</code></a>), as in <code>flags ^ other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.complement\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><h4 class=\"code-header\">pub const fn <a href=\"#method.complement\" class=\"fn\">complement</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the complement of this set of flags.</p>\n<p>Specifically, the returned set contains all the flags which are\nnot set in <code>self</code>, but which are allowed for this type.</p>\n<p>Alternatively, it can be thought of as the set difference\nbetween <a href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html#method.all\" title=\"associated function rustc_symbol_mangling::typeid::TypeIdOptions::all\"><code>Self::all()</code></a> and <code>self</code> (e.g. <code>Self::all() - self</code>)</p>\n<p>This is equivalent to using the <code>!</code> operator (e.g.\n<a href=\"https://doc.rust-lang.org/std/ops/trait.Not.html\"><code>ops::Not</code></a>), as in <code>!flags</code>.</p>\n</div></details></div></details>",0,"rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-PartialEq%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a>&gt; for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#231\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Extend%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-Extend%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;<a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a>&gt; for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.extend\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.extend\" class=\"fn\">extend</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Self&gt;&gt;(&amp;mut self, iterator: T)</h4></section></summary><div class='docblock'>Extends a collection with the contents of an iterator. <a href=\"#tymethod.extend\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#375\">source</a><a href=\"#method.extend_one\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_one\" class=\"fn\">extend_one</a>(&amp;mut self, item: A)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Extends a collection with exactly one element.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend_reserve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/iter/traits/collect.rs.html#383\">source</a><a href=\"#method.extend_reserve\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\" class=\"fn\">extend_reserve</a>(&amp;mut self, additional: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">๐ฌ</span><span>This is a nightly-only experimental API. (<code>extend_one</code>)</span></div></span><div class='docblock'>Reserves capacity in a collection for the given number of additional elements. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.Extend.html#method.extend_reserve\">Read more</a></div></details></div></details>","Extend","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAnd%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-BitAnd%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAnd.html\" title=\"trait core::ops::bit::BitAnd\">BitAnd</a>&lt;<a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a>&gt; for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.bitand\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.bitand\" class=\"fn\">bitand</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the intersection between the two sets of flags.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>&amp;</code> operator.</div></details></div></details>","BitAnd","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-LowerHex-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","LowerHex","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOr%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-BitOr%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOr.html\" title=\"trait core::ops::bit::BitOr\">BitOr</a>&lt;<a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a>&gt; for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.bitor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.bitor\" class=\"fn\">bitor</a>(self, other: <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the union of the two sets of flags.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>|</code> operator.</div></details></div></details>","BitOr","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Binary-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-Binary-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Binary.html\" title=\"trait core::fmt::Binary\">Binary</a> for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Binary","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<section id=\"impl-StructuralPartialEq-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-StructuralPartialEq-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section>","StructuralPartialEq","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-UpperHex-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","UpperHex","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-SubAssign%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a>&gt; for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class=\"docblock\"><p>Disables all flags enabled in the set.</p>\n</div></details></div></details>","SubAssign","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Not-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-Not-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Not.html\" title=\"trait core::ops::bit::Not\">Not</a> for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.not\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.not\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.not\" class=\"fn\">not</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the complement of this set of flags.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>!</code> operator.</div></details></div></details>","Not","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-Debug-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXor%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-BitXor%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXor.html\" title=\"trait core::ops::bit::BitXor\">BitXor</a>&lt;<a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a>&gt; for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.bitxor\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.bitxor\" class=\"fn\">bitxor</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the left flags, but with all the right flags toggled.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>^</code> operator.</div></details></div></details>","BitXor","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-Clone-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Octal-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-Octal-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Octal.html\" title=\"trait core::fmt::Octal\">Octal</a> for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter.</div></details></div></details>","Octal","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<section id=\"impl-StructuralEq-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-StructuralEq-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section>","StructuralEq","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitOrAssign%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-BitOrAssign%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a>&gt; for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.bitor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.bitor_assign\" class=\"fn\">bitor_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class=\"docblock\"><p>Adds the set of flags.</p>\n</div></details></div></details>","BitOrAssign","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitAndAssign%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-BitAndAssign%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitAndAssign.html\" title=\"trait core::ops::bit::BitAndAssign\">BitAndAssign</a>&lt;<a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a>&gt; for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitand_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.bitand_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.bitand_assign\" class=\"fn\">bitand_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class=\"docblock\"><p>Disables all flags disabled in the set.</p>\n</div></details></div></details>","BitAndAssign","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-PartialOrd%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a>&gt; for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1090\">source</a></span><a href=\"#method.lt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1107\">source</a></span><a href=\"#method.le\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1123\">source</a></span><a href=\"#method.gt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1140\">source</a></span><a href=\"#method.ge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-Sub%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a>&gt; for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.sub\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.sub\" class=\"fn\">sub</a>(self, other: Self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns the set difference of the two sets of flags.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details></div></details>","Sub","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-Hash-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-Ord-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.cmp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#808-810\">source</a></span><a href=\"#method.max\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#828-830\">source</a></span><a href=\"#method.min\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#853-856\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<span class=\"where fmt-newline\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;Self&gt;,</span></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BitXorAssign%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-BitXorAssign%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.BitXorAssign.html\" title=\"trait core::ops::bit::BitXorAssign\">BitXorAssign</a>&lt;<a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a>&gt; for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bitxor_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.bitxor_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.bitxor_assign\" class=\"fn\">bitxor_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class=\"docblock\"><p>Toggles the set of flags.</p>\n</div></details></div></details>","BitXorAssign","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<section id=\"impl-Copy-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-Copy-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section>","Copy","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-FromIterator%3CTypeIdOptions%3E-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;<a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a>&gt; for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#method.from_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Self&gt;&gt;(iterator: T) -&gt; Self</h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"],["<section id=\"impl-Eq-for-TypeIdOptions\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_symbol_mangling/typeid.rs.html#12-19\">source</a><a href=\"#impl-Eq-for-TypeIdOptions\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"rustc_symbol_mangling/typeid/struct.TypeIdOptions.html\" title=\"struct rustc_symbol_mangling::typeid::TypeIdOptions\">TypeIdOptions</a></h3></section>","Eq","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::EncodeTyOptions","rustc_symbol_mangling::typeid::typeid_itanium_cxx_abi::TransformTyOptions"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()