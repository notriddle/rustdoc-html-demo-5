(function() {var type_impls = {
"miri":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VClockAlloc\" class=\"impl\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#702-968\">source</a><a href=\"#impl-VClockAlloc\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"miri/concurrency/data_race/struct.VClockAlloc.html\" title=\"struct miri::concurrency::data_race::VClockAlloc\">VClockAlloc</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_allocation\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#704-742\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.new_allocation\" class=\"fn\">new_allocation</a>(\n    global: &amp;<a class=\"struct\" href=\"miri/concurrency/data_race/struct.GlobalState.html\" title=\"struct miri::concurrency::data_race::GlobalState\">GlobalState</a>,\n    thread_mgr: &amp;<a class=\"struct\" href=\"miri/concurrency/thread/struct.ThreadManager.html\" title=\"struct miri::concurrency::thread::ThreadManager\">ThreadManager</a>&lt;'_, '_&gt;,\n    len: <a class=\"struct\" href=\"rustc_abi/struct.Size.html\" title=\"struct rustc_abi::Size\">Size</a>,\n    kind: <a class=\"enum\" href=\"miri/enum.MemoryKind.html\" title=\"enum miri::MemoryKind\">MemoryKind</a>&lt;<a class=\"enum\" href=\"miri/machine/enum.MiriMemoryKind.html\" title=\"enum miri::machine::MiriMemoryKind\">MiriMemoryKind</a>&gt;,\n    current_span: <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a>\n) -&gt; <a class=\"struct\" href=\"miri/concurrency/data_race/struct.VClockAlloc.html\" title=\"struct miri::concurrency::data_race::VClockAlloc\">VClockAlloc</a></h4></section></summary><div class=\"docblock\"><p>Create a new data-race detector for newly allocated memory.</p>\n</div></details><section id=\"method.find_gt_index\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#746-773\">source</a><h4 class=\"code-header\">fn <a href=\"#method.find_gt_index\" class=\"fn\">find_gt_index</a>(l: &amp;<a class=\"struct\" href=\"miri/concurrency/vector_clock/struct.VClock.html\" title=\"struct miri::concurrency::vector_clock::VClock\">VClock</a>, r: &amp;<a class=\"struct\" href=\"miri/concurrency/vector_clock/struct.VClock.html\" title=\"struct miri::concurrency::vector_clock::VClock\">VClock</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"miri/concurrency/vector_clock/struct.VectorIdx.html\" title=\"struct miri::concurrency::vector_clock::VectorIdx\">VectorIdx</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.report_data_race\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#782-842\">source</a><h4 class=\"code-header\">fn <a href=\"#method.report_data_race\" class=\"fn\">report_data_race</a>&lt;'tcx&gt;(\n    global: &amp;<a class=\"struct\" href=\"miri/concurrency/data_race/struct.GlobalState.html\" title=\"struct miri::concurrency::data_race::GlobalState\">GlobalState</a>,\n    thread_mgr: &amp;<a class=\"struct\" href=\"miri/concurrency/thread/struct.ThreadManager.html\" title=\"struct miri::concurrency::thread::ThreadManager\">ThreadManager</a>&lt;'_, '_&gt;,\n    mem_clocks: &amp;<a class=\"struct\" href=\"miri/concurrency/data_race/struct.MemoryCellClocks.html\" title=\"struct miri::concurrency::data_race::MemoryCellClocks\">MemoryCellClocks</a>,\n    action: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    is_atomic: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,\n    ptr_dbg: <a class=\"struct\" href=\"miri/struct.Pointer.html\" title=\"struct miri::Pointer\">Pointer</a>&lt;<a class=\"struct\" href=\"miri/struct.AllocId.html\" title=\"struct miri::AllocId\">AllocId</a>&gt;\n) -&gt; <a class=\"type\" href=\"miri/type.InterpResult.html\" title=\"type miri::InterpResult\">InterpResult</a>&lt;'tcx&gt;</h4></section></summary><div class=\"docblock\"><p>Report a data-race found in the program.\nThis finds the two racing threads and the type\nof data-race that occurred. This will also\nreturn info about the memory location the data-race\noccurred in.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.race_free_with_atomic\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#846-862\">source</a><h4 class=\"code-header\">pub(super) fn <a href=\"#method.race_free_with_atomic\" class=\"fn\">race_free_with_atomic</a>(\n    &amp;self,\n    range: <a class=\"struct\" href=\"miri/struct.AllocRange.html\" title=\"struct miri::AllocRange\">AllocRange</a>,\n    global: &amp;<a class=\"struct\" href=\"miri/concurrency/data_race/struct.GlobalState.html\" title=\"struct miri::concurrency::data_race::GlobalState\">GlobalState</a>,\n    thread_mgr: &amp;<a class=\"struct\" href=\"miri/concurrency/thread/struct.ThreadManager.html\" title=\"struct miri::concurrency::thread::ThreadManager\">ThreadManager</a>&lt;'_, '_&gt;\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Detect racing atomic read and writes (not data races)\non every byte of the current access range</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#869-902\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.read\" class=\"fn\">read</a>&lt;'tcx&gt;(\n    &amp;self,\n    alloc_id: <a class=\"struct\" href=\"miri/struct.AllocId.html\" title=\"struct miri::AllocId\">AllocId</a>,\n    access_range: <a class=\"struct\" href=\"miri/struct.AllocRange.html\" title=\"struct miri::AllocRange\">AllocRange</a>,\n    machine: &amp;<a class=\"struct\" href=\"miri/machine/struct.MiriMachine.html\" title=\"struct miri::machine::MiriMachine\">MiriMachine</a>&lt;'_, '_&gt;\n) -&gt; <a class=\"type\" href=\"miri/type.InterpResult.html\" title=\"type miri::InterpResult\">InterpResult</a>&lt;'tcx&gt;</h4></section></summary><div class=\"docblock\"><p>Detect data-races for an unsynchronized read operation, will not perform\ndata-race detection if <code>race_detecting()</code> is false, either due to no threads\nbeing created or if it is temporarily disabled during a racy read or write\noperation for which data-race detection is handled separately, for example\natomic read operations.</p>\n</div></details><section id=\"method.unique_access\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#905-941\">source</a><h4 class=\"code-header\">fn <a href=\"#method.unique_access\" class=\"fn\">unique_access</a>&lt;'tcx&gt;(\n    &amp;mut self,\n    alloc_id: <a class=\"struct\" href=\"miri/struct.AllocId.html\" title=\"struct miri::AllocId\">AllocId</a>,\n    access_range: <a class=\"struct\" href=\"miri/struct.AllocRange.html\" title=\"struct miri::AllocRange\">AllocRange</a>,\n    write_type: <a class=\"enum\" href=\"miri/concurrency/data_race/enum.WriteType.html\" title=\"enum miri::concurrency::data_race::WriteType\">WriteType</a>,\n    machine: &amp;mut <a class=\"struct\" href=\"miri/machine/struct.MiriMachine.html\" title=\"struct miri::machine::MiriMachine\">MiriMachine</a>&lt;'_, '_&gt;\n) -&gt; <a class=\"type\" href=\"miri/type.InterpResult.html\" title=\"type miri::InterpResult\">InterpResult</a>&lt;'tcx&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#947-954\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.write\" class=\"fn\">write</a>&lt;'tcx&gt;(\n    &amp;mut self,\n    alloc_id: <a class=\"struct\" href=\"miri/struct.AllocId.html\" title=\"struct miri::AllocId\">AllocId</a>,\n    range: <a class=\"struct\" href=\"miri/struct.AllocRange.html\" title=\"struct miri::AllocRange\">AllocRange</a>,\n    machine: &amp;mut <a class=\"struct\" href=\"miri/machine/struct.MiriMachine.html\" title=\"struct miri::machine::MiriMachine\">MiriMachine</a>&lt;'_, '_&gt;\n) -&gt; <a class=\"type\" href=\"miri/type.InterpResult.html\" title=\"type miri::InterpResult\">InterpResult</a>&lt;'tcx&gt;</h4></section></summary><div class=\"docblock\"><p>Detect data-races for an unsynchronized write operation, will not perform\ndata-race threads if <code>race_detecting()</code> is false, either due to no threads\nbeing created or if it is temporarily disabled during a racy read or write\noperation</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deallocate\" class=\"method\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#960-967\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.deallocate\" class=\"fn\">deallocate</a>&lt;'tcx&gt;(\n    &amp;mut self,\n    alloc_id: <a class=\"struct\" href=\"miri/struct.AllocId.html\" title=\"struct miri::AllocId\">AllocId</a>,\n    range: <a class=\"struct\" href=\"miri/struct.AllocRange.html\" title=\"struct miri::AllocRange\">AllocRange</a>,\n    machine: &amp;mut <a class=\"struct\" href=\"miri/machine/struct.MiriMachine.html\" title=\"struct miri::machine::MiriMachine\">MiriMachine</a>&lt;'_, '_&gt;\n) -&gt; <a class=\"type\" href=\"miri/type.InterpResult.html\" title=\"type miri::InterpResult\">InterpResult</a>&lt;'tcx&gt;</h4></section></summary><div class=\"docblock\"><p>Detect data-races for an unsynchronized deallocate operation, will not perform\ndata-race threads if <code>race_detecting()</code> is false, either due to no threads\nbeing created or if it is temporarily disabled during a racy read or write\noperation</p>\n</div></details></div></details>",0,"miri::concurrency::data_race::AllocState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-VClockAlloc\" class=\"impl\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#690\">source</a><a href=\"#impl-Debug-for-VClockAlloc\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"miri/concurrency/data_race/struct.VClockAlloc.html\" title=\"struct miri::concurrency::data_race::VClockAlloc\">VClockAlloc</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#690\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","miri::concurrency::data_race::AllocState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VisitTags-for-VClockAlloc\" class=\"impl\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#696-700\">source</a><a href=\"#impl-VisitTags-for-VClockAlloc\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"miri/tag_gc/trait.VisitTags.html\" title=\"trait miri::tag_gc::VisitTags\">VisitTags</a> for <a class=\"struct\" href=\"miri/concurrency/data_race/struct.VClockAlloc.html\" title=\"struct miri::concurrency::data_race::VClockAlloc\">VClockAlloc</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.visit_tags\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#697-699\">source</a><a href=\"#method.visit_tags\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.visit_tags\" class=\"fn\">visit_tags</a>(&amp;self, _visit: &amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"struct\" href=\"miri/borrow_tracker/struct.BorTag.html\" title=\"struct miri::borrow_tracker::BorTag\">BorTag</a>))</h4></section></div></details>","VisitTags","miri::concurrency::data_race::AllocState"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-VClockAlloc\" class=\"impl\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#690\">source</a><a href=\"#impl-Clone-for-VClockAlloc\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"miri/concurrency/data_race/struct.VClockAlloc.html\" title=\"struct miri::concurrency::data_race::VClockAlloc\">VClockAlloc</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/miri/concurrency/data_race.rs.html#690\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"miri/concurrency/data_race/struct.VClockAlloc.html\" title=\"struct miri::concurrency::data_race::VClockAlloc\">VClockAlloc</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","miri::concurrency::data_race::AllocState"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()