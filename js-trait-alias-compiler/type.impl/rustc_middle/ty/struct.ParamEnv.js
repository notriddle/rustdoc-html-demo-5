(function() {var type_impls = {
"rustc_middle":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParamEnv%3C'tcx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1689-1780\">source</a><a href=\"#impl-ParamEnv%3C'tcx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty-1\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1695-1697\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.empty-1\" class=\"fn\">empty</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a trait environment suitable for contexts where\nthere are no where-clauses in scope. Hidden types (like <code>impl Trait</code>) are left hidden, so this is suitable for ordinary\ntype-checking.</p>\n</div></details><section id=\"method.caller_bounds\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1700-1702\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.caller_bounds\" class=\"fn\">caller_bounds</a>(self) -&gt; &amp;'tcx <a class=\"struct\" href=\"rustc_middle/ty/list/struct.List.html\" title=\"struct rustc_middle::ty::list::List\">List</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.Clause.html\" title=\"struct rustc_middle::ty::Clause\">Clause</a>&lt;'tcx&gt;&gt;</h4></section><section id=\"method.reveal\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1705-1707\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.reveal\" class=\"fn\">reveal</a>(self) -&gt; <a class=\"enum\" href=\"rustc_middle/traits/enum.Reveal.html\" title=\"enum rustc_middle::traits::Reveal\">Reveal</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.reveal_all\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1717-1719\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.reveal_all\" class=\"fn\">reveal_all</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a trait environment with no where-clauses in scope\nwhere the values of all <code>impl Trait</code> and other hidden types\nare revealed. This is suitable for monomorphized, post-typeck\nenvironments like codegen or doing optimizations.</p>\n<p>N.B., if you want to have predicates in scope, use <code>ParamEnv::new</code>,\nor invoke <code>param_env.with_reveal_all()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new-35\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1723-1725\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.new-35\" class=\"fn\">new</a>(caller_bounds: &amp;'tcx <a class=\"struct\" href=\"rustc_middle/ty/list/struct.List.html\" title=\"struct rustc_middle::ty::list::List\">List</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.Clause.html\" title=\"struct rustc_middle::ty::Clause\">Clause</a>&lt;'tcx&gt;&gt;, reveal: <a class=\"enum\" href=\"rustc_middle/traits/enum.Reveal.html\" title=\"enum rustc_middle::traits::Reveal\">Reveal</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a trait environment with the given set of predicates.</p>\n</div></details><section id=\"method.with_user_facing\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1727-1730\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.with_user_facing\" class=\"fn\">with_user_facing</a>(self) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_reveal_all_normalized\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1741-1747\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.with_reveal_all_normalized\" class=\"fn\">with_reveal_all_normalized</a>(self, tcx: <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns a new parameter environment with the same clauses, but\nwhich “reveals” the true results of projections in all cases\n(even for associated types that are specializable). This is\nthe desired behavior during codegen and certain other special\ncontexts; normally though we want to use <code>Reveal::UserFacing</code>,\nwhich is the default.\nAll opaque types in the caller_bounds of the <code>ParamEnv</code>\nwill be normalized to their underlying types.\nSee PR #65989 and issue #65918 for more details</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.without_caller_bounds\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1751-1753\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.without_caller_bounds\" class=\"fn\">without_caller_bounds</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns this same environment but with no caller bounds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and-142\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1767-1779\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.and-142\" class=\"fn\">and</a>&lt;T: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitable.html\" title=\"trait rustc_middle::ty::TypeVisitable\">TypeVisitable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(\n    self,\n    value: T\n) -&gt; <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnvAnd.html\" title=\"struct rustc_middle::ty::ParamEnvAnd\">ParamEnvAnd</a>&lt;'tcx, T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a suitable environment in which to perform trait\nqueries on the given value. When type-checking, this is simply\nthe pair of the environment plus value. But when reveal is set to\nAll, then if <code>value</code> does not reference any type parameters, we will\npair it with the empty environment. This improves caching and is generally\ninvisible.</p>\n<p>N.B., we preserve the environment when type-checking because it\nis possible for the user to have wacky where-clauses like\n<code>where Box&lt;u32&gt;: Copy</code>, which are clearly never\nsatisfiable. We generally want to behave as if they were true,\nalthough the surrounding function is never reachable.</p>\n</div></details></div></details>",0,"rustc_middle::query::queries::param_env::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParamEnv%3C'tcx%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1689-1780\">source</a><a href=\"#impl-ParamEnv%3C'tcx%3E-1\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty-2\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1695-1697\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.empty-2\" class=\"fn\">empty</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a trait environment suitable for contexts where\nthere are no where-clauses in scope. Hidden types (like <code>impl Trait</code>) are left hidden, so this is suitable for ordinary\ntype-checking.</p>\n</div></details><section id=\"method.caller_bounds-1\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1700-1702\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.caller_bounds-1\" class=\"fn\">caller_bounds</a>(self) -&gt; &amp;'tcx <a class=\"struct\" href=\"rustc_middle/ty/list/struct.List.html\" title=\"struct rustc_middle::ty::list::List\">List</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.Clause.html\" title=\"struct rustc_middle::ty::Clause\">Clause</a>&lt;'tcx&gt;&gt;</h4></section><section id=\"method.reveal-1\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1705-1707\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.reveal-1\" class=\"fn\">reveal</a>(self) -&gt; <a class=\"enum\" href=\"rustc_middle/traits/enum.Reveal.html\" title=\"enum rustc_middle::traits::Reveal\">Reveal</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.reveal_all-1\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1717-1719\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.reveal_all-1\" class=\"fn\">reveal_all</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a trait environment with no where-clauses in scope\nwhere the values of all <code>impl Trait</code> and other hidden types\nare revealed. This is suitable for monomorphized, post-typeck\nenvironments like codegen or doing optimizations.</p>\n<p>N.B., if you want to have predicates in scope, use <code>ParamEnv::new</code>,\nor invoke <code>param_env.with_reveal_all()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new-36\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1723-1725\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.new-36\" class=\"fn\">new</a>(caller_bounds: &amp;'tcx <a class=\"struct\" href=\"rustc_middle/ty/list/struct.List.html\" title=\"struct rustc_middle::ty::list::List\">List</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.Clause.html\" title=\"struct rustc_middle::ty::Clause\">Clause</a>&lt;'tcx&gt;&gt;, reveal: <a class=\"enum\" href=\"rustc_middle/traits/enum.Reveal.html\" title=\"enum rustc_middle::traits::Reveal\">Reveal</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a trait environment with the given set of predicates.</p>\n</div></details><section id=\"method.with_user_facing-1\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1727-1730\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.with_user_facing-1\" class=\"fn\">with_user_facing</a>(self) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_reveal_all_normalized-1\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1741-1747\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.with_reveal_all_normalized-1\" class=\"fn\">with_reveal_all_normalized</a>(self, tcx: <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns a new parameter environment with the same clauses, but\nwhich “reveals” the true results of projections in all cases\n(even for associated types that are specializable). This is\nthe desired behavior during codegen and certain other special\ncontexts; normally though we want to use <code>Reveal::UserFacing</code>,\nwhich is the default.\nAll opaque types in the caller_bounds of the <code>ParamEnv</code>\nwill be normalized to their underlying types.\nSee PR #65989 and issue #65918 for more details</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.without_caller_bounds-1\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1751-1753\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.without_caller_bounds-1\" class=\"fn\">without_caller_bounds</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns this same environment but with no caller bounds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and-143\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1767-1779\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.and-143\" class=\"fn\">and</a>&lt;T: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitable.html\" title=\"trait rustc_middle::ty::TypeVisitable\">TypeVisitable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(\n    self,\n    value: T\n) -&gt; <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnvAnd.html\" title=\"struct rustc_middle::ty::ParamEnvAnd\">ParamEnvAnd</a>&lt;'tcx, T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a suitable environment in which to perform trait\nqueries on the given value. When type-checking, this is simply\nthe pair of the environment plus value. But when reveal is set to\nAll, then if <code>value</code> does not reference any type parameters, we will\npair it with the empty environment. This improves caching and is generally\ninvisible.</p>\n<p>N.B., we preserve the environment when type-checking because it\nis possible for the user to have wacky where-clauses like\n<code>where Box&lt;u32&gt;: Copy</code>, which are clearly never\nsatisfiable. We generally want to behave as if they were true,\nalthough the surrounding function is never reachable.</p>\n</div></details></div></details>",0,"rustc_middle::query::queries::param_env::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParamEnv%3C'tcx%3E-2\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1689-1780\">source</a><a href=\"#impl-ParamEnv%3C'tcx%3E-2\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty-3\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1695-1697\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.empty-3\" class=\"fn\">empty</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a trait environment suitable for contexts where\nthere are no where-clauses in scope. Hidden types (like <code>impl Trait</code>) are left hidden, so this is suitable for ordinary\ntype-checking.</p>\n</div></details><section id=\"method.caller_bounds-2\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1700-1702\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.caller_bounds-2\" class=\"fn\">caller_bounds</a>(self) -&gt; &amp;'tcx <a class=\"struct\" href=\"rustc_middle/ty/list/struct.List.html\" title=\"struct rustc_middle::ty::list::List\">List</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.Clause.html\" title=\"struct rustc_middle::ty::Clause\">Clause</a>&lt;'tcx&gt;&gt;</h4></section><section id=\"method.reveal-2\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1705-1707\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.reveal-2\" class=\"fn\">reveal</a>(self) -&gt; <a class=\"enum\" href=\"rustc_middle/traits/enum.Reveal.html\" title=\"enum rustc_middle::traits::Reveal\">Reveal</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.reveal_all-2\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1717-1719\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.reveal_all-2\" class=\"fn\">reveal_all</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a trait environment with no where-clauses in scope\nwhere the values of all <code>impl Trait</code> and other hidden types\nare revealed. This is suitable for monomorphized, post-typeck\nenvironments like codegen or doing optimizations.</p>\n<p>N.B., if you want to have predicates in scope, use <code>ParamEnv::new</code>,\nor invoke <code>param_env.with_reveal_all()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new-37\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1723-1725\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.new-37\" class=\"fn\">new</a>(caller_bounds: &amp;'tcx <a class=\"struct\" href=\"rustc_middle/ty/list/struct.List.html\" title=\"struct rustc_middle::ty::list::List\">List</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.Clause.html\" title=\"struct rustc_middle::ty::Clause\">Clause</a>&lt;'tcx&gt;&gt;, reveal: <a class=\"enum\" href=\"rustc_middle/traits/enum.Reveal.html\" title=\"enum rustc_middle::traits::Reveal\">Reveal</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a trait environment with the given set of predicates.</p>\n</div></details><section id=\"method.with_user_facing-2\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1727-1730\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.with_user_facing-2\" class=\"fn\">with_user_facing</a>(self) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_reveal_all_normalized-2\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1741-1747\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.with_reveal_all_normalized-2\" class=\"fn\">with_reveal_all_normalized</a>(self, tcx: <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns a new parameter environment with the same clauses, but\nwhich “reveals” the true results of projections in all cases\n(even for associated types that are specializable). This is\nthe desired behavior during codegen and certain other special\ncontexts; normally though we want to use <code>Reveal::UserFacing</code>,\nwhich is the default.\nAll opaque types in the caller_bounds of the <code>ParamEnv</code>\nwill be normalized to their underlying types.\nSee PR #65989 and issue #65918 for more details</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.without_caller_bounds-2\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1751-1753\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.without_caller_bounds-2\" class=\"fn\">without_caller_bounds</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns this same environment but with no caller bounds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and-144\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1767-1779\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.and-144\" class=\"fn\">and</a>&lt;T: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitable.html\" title=\"trait rustc_middle::ty::TypeVisitable\">TypeVisitable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(\n    self,\n    value: T\n) -&gt; <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnvAnd.html\" title=\"struct rustc_middle::ty::ParamEnvAnd\">ParamEnvAnd</a>&lt;'tcx, T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a suitable environment in which to perform trait\nqueries on the given value. When type-checking, this is simply\nthe pair of the environment plus value. But when reveal is set to\nAll, then if <code>value</code> does not reference any type parameters, we will\npair it with the empty environment. This improves caching and is generally\ninvisible.</p>\n<p>N.B., we preserve the environment when type-checking because it\nis possible for the user to have wacky where-clauses like\n<code>where Box&lt;u32&gt;: Copy</code>, which are clearly never\nsatisfiable. We generally want to behave as if they were true,\nalthough the surrounding function is never reachable.</p>\n</div></details></div></details>",0,"rustc_middle::query::queries::param_env_reveal_all_normalized::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParamEnv%3C'tcx%3E-3\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1689-1780\">source</a><a href=\"#impl-ParamEnv%3C'tcx%3E-3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty-4\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1695-1697\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.empty-4\" class=\"fn\">empty</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a trait environment suitable for contexts where\nthere are no where-clauses in scope. Hidden types (like <code>impl Trait</code>) are left hidden, so this is suitable for ordinary\ntype-checking.</p>\n</div></details><section id=\"method.caller_bounds-3\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1700-1702\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.caller_bounds-3\" class=\"fn\">caller_bounds</a>(self) -&gt; &amp;'tcx <a class=\"struct\" href=\"rustc_middle/ty/list/struct.List.html\" title=\"struct rustc_middle::ty::list::List\">List</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.Clause.html\" title=\"struct rustc_middle::ty::Clause\">Clause</a>&lt;'tcx&gt;&gt;</h4></section><section id=\"method.reveal-3\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1705-1707\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.reveal-3\" class=\"fn\">reveal</a>(self) -&gt; <a class=\"enum\" href=\"rustc_middle/traits/enum.Reveal.html\" title=\"enum rustc_middle::traits::Reveal\">Reveal</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.reveal_all-3\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1717-1719\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.reveal_all-3\" class=\"fn\">reveal_all</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a trait environment with no where-clauses in scope\nwhere the values of all <code>impl Trait</code> and other hidden types\nare revealed. This is suitable for monomorphized, post-typeck\nenvironments like codegen or doing optimizations.</p>\n<p>N.B., if you want to have predicates in scope, use <code>ParamEnv::new</code>,\nor invoke <code>param_env.with_reveal_all()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new-38\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1723-1725\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.new-38\" class=\"fn\">new</a>(caller_bounds: &amp;'tcx <a class=\"struct\" href=\"rustc_middle/ty/list/struct.List.html\" title=\"struct rustc_middle::ty::list::List\">List</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.Clause.html\" title=\"struct rustc_middle::ty::Clause\">Clause</a>&lt;'tcx&gt;&gt;, reveal: <a class=\"enum\" href=\"rustc_middle/traits/enum.Reveal.html\" title=\"enum rustc_middle::traits::Reveal\">Reveal</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Construct a trait environment with the given set of predicates.</p>\n</div></details><section id=\"method.with_user_facing-3\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1727-1730\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.with_user_facing-3\" class=\"fn\">with_user_facing</a>(self) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_reveal_all_normalized-3\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1741-1747\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.with_reveal_all_normalized-3\" class=\"fn\">with_reveal_all_normalized</a>(self, tcx: <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns a new parameter environment with the same clauses, but\nwhich “reveals” the true results of projections in all cases\n(even for associated types that are specializable). This is\nthe desired behavior during codegen and certain other special\ncontexts; normally though we want to use <code>Reveal::UserFacing</code>,\nwhich is the default.\nAll opaque types in the caller_bounds of the <code>ParamEnv</code>\nwill be normalized to their underlying types.\nSee PR #65989 and issue #65918 for more details</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.without_caller_bounds-3\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1751-1753\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.without_caller_bounds-3\" class=\"fn\">without_caller_bounds</a>(self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns this same environment but with no caller bounds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and-145\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1767-1779\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.and-145\" class=\"fn\">and</a>&lt;T: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitable.html\" title=\"trait rustc_middle::ty::TypeVisitable\">TypeVisitable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(\n    self,\n    value: T\n) -&gt; <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnvAnd.html\" title=\"struct rustc_middle::ty::ParamEnvAnd\">ParamEnvAnd</a>&lt;'tcx, T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a suitable environment in which to perform trait\nqueries on the given value. When type-checking, this is simply\nthe pair of the environment plus value. But when reveal is set to\nAll, then if <code>value</code> does not reference any type parameters, we will\npair it with the empty environment. This improves caching and is generally\ninvisible.</p>\n<p>N.B., we preserve the environment when type-checking because it\nis possible for the user to have wacky where-clauses like\n<code>where Box&lt;u32&gt;: Copy</code>, which are clearly never\nsatisfiable. We generally want to behave as if they were true,\nalthough the surrounding function is never reachable.</p>\n</div></details></div></details>",0,"rustc_middle::query::queries::param_env_reveal_all_normalized::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CD%3E-for-ParamEnv%3C'tcx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#304-310\">source</a><a href=\"#impl-Decodable%3CD%3E-for-ParamEnv%3C'tcx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx, D: <a class=\"trait\" href=\"rustc_middle/ty/trait.TyDecoder.html\" title=\"trait rustc_middle::ty::TyDecoder\">TyDecoder</a>&lt;I = <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode-603\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#305-309\">source</a><a href=\"#method.decode-603\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.decode\" class=\"fn\">decode</a>(d: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>) -&gt; Self</h4></section></div></details>","Decodable","rustc_middle::query::queries::param_env::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CD%3E-for-ParamEnv%3C'tcx%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#304-310\">source</a><a href=\"#impl-Decodable%3CD%3E-for-ParamEnv%3C'tcx%3E-1\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx, D: <a class=\"trait\" href=\"rustc_middle/ty/trait.TyDecoder.html\" title=\"trait rustc_middle::ty::TyDecoder\">TyDecoder</a>&lt;I = <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode-604\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#305-309\">source</a><a href=\"#method.decode-604\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.decode\" class=\"fn\">decode</a>(d: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>) -&gt; Self</h4></section></div></details>","Decodable","rustc_middle::query::queries::param_env::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CD%3E-for-ParamEnv%3C'tcx%3E-2\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#304-310\">source</a><a href=\"#impl-Decodable%3CD%3E-for-ParamEnv%3C'tcx%3E-2\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx, D: <a class=\"trait\" href=\"rustc_middle/ty/trait.TyDecoder.html\" title=\"trait rustc_middle::ty::TyDecoder\">TyDecoder</a>&lt;I = <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode-605\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#305-309\">source</a><a href=\"#method.decode-605\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.decode\" class=\"fn\">decode</a>(d: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>) -&gt; Self</h4></section></div></details>","Decodable","rustc_middle::query::queries::param_env_reveal_all_normalized::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Decodable%3CD%3E-for-ParamEnv%3C'tcx%3E-3\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#304-310\">source</a><a href=\"#impl-Decodable%3CD%3E-for-ParamEnv%3C'tcx%3E-3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx, D: <a class=\"trait\" href=\"rustc_middle/ty/trait.TyDecoder.html\" title=\"trait rustc_middle::ty::TyDecoder\">TyDecoder</a>&lt;I = <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Decodable.html\" title=\"trait rustc_serialize::serialize::Decodable\">Decodable</a>&lt;D&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.decode-606\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#305-309\">source</a><a href=\"#method.decode-606\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.decode\" class=\"fn\">decode</a>(d: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut D</a>) -&gt; Self</h4></section></div></details>","Decodable","rustc_middle::query::queries::param_env_reveal_all_normalized::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-ParamEnv%3C'tcx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-Clone-for-ParamEnv%3C'tcx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone-348\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#method.clone-348\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from-348\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from-348\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_middle::query::queries::param_env::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-ParamEnv%3C'tcx%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-Clone-for-ParamEnv%3C'tcx%3E-1\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone-349\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#method.clone-349\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from-349\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from-349\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_middle::query::queries::param_env::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-ParamEnv%3C'tcx%3E-2\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-Clone-for-ParamEnv%3C'tcx%3E-2\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone-350\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#method.clone-350\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from-350\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from-350\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_middle::query::queries::param_env_reveal_all_normalized::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-ParamEnv%3C'tcx%3E-3\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-Clone-for-ParamEnv%3C'tcx%3E-3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone-351\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#method.clone-351\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from-351\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from-351\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_middle::query::queries::param_env_reveal_all_normalized::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Key-for-ParamEnv%3C'tcx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#474-480\">source</a><a href=\"#impl-Key-for-ParamEnv%3C'tcx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/query/keys/trait.Key.html\" title=\"trait rustc_middle::query::keys::Key\">Key</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.CacheSelector-608\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CacheSelector-608\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.CacheSelector\" class=\"associatedtype\">CacheSelector</a> = <a class=\"struct\" href=\"rustc_query_system/query/caches/struct.DefaultCacheSelector.html\" title=\"struct rustc_query_system::query::caches::DefaultCacheSelector\">DefaultCacheSelector</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_span-608\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#477-479\">source</a><a href=\"#method.default_span-608\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.default_span\" class=\"fn\">default_span</a>(&amp;self, _: <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'_&gt;) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class='docblock'>In the event that a cycle occurs, if no explicit span has been\ngiven for a query with key <code>self</code>, what span should we use?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.key_as_def_id-608\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#40-42\">source</a><a href=\"#method.key_as_def_id-608\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/keys/trait.Key.html#method.key_as_def_id\" class=\"fn\">key_as_def_id</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>&gt;</h4></section></summary><div class='docblock'>If the key is a <a href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\"><code>DefId</code></a> or <code>DefId</code>–equivalent, return that <code>DefId</code>.\nOtherwise, return <code>None</code>.</div></details><section id=\"method.ty_adt_id-608\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#44-46\">source</a><a href=\"#method.ty_adt_id-608\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/keys/trait.Key.html#method.ty_adt_id\" class=\"fn\">ty_adt_id</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>&gt;</h4></section></div></details>","Key","rustc_middle::query::queries::param_env::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Key-for-ParamEnv%3C'tcx%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#474-480\">source</a><a href=\"#impl-Key-for-ParamEnv%3C'tcx%3E-1\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/query/keys/trait.Key.html\" title=\"trait rustc_middle::query::keys::Key\">Key</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.CacheSelector-609\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CacheSelector-609\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.CacheSelector\" class=\"associatedtype\">CacheSelector</a> = <a class=\"struct\" href=\"rustc_query_system/query/caches/struct.DefaultCacheSelector.html\" title=\"struct rustc_query_system::query::caches::DefaultCacheSelector\">DefaultCacheSelector</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_span-609\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#477-479\">source</a><a href=\"#method.default_span-609\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.default_span\" class=\"fn\">default_span</a>(&amp;self, _: <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'_&gt;) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class='docblock'>In the event that a cycle occurs, if no explicit span has been\ngiven for a query with key <code>self</code>, what span should we use?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.key_as_def_id-609\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#40-42\">source</a><a href=\"#method.key_as_def_id-609\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/keys/trait.Key.html#method.key_as_def_id\" class=\"fn\">key_as_def_id</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>&gt;</h4></section></summary><div class='docblock'>If the key is a <a href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\"><code>DefId</code></a> or <code>DefId</code>–equivalent, return that <code>DefId</code>.\nOtherwise, return <code>None</code>.</div></details><section id=\"method.ty_adt_id-609\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#44-46\">source</a><a href=\"#method.ty_adt_id-609\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/keys/trait.Key.html#method.ty_adt_id\" class=\"fn\">ty_adt_id</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>&gt;</h4></section></div></details>","Key","rustc_middle::query::queries::param_env::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Key-for-ParamEnv%3C'tcx%3E-2\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#474-480\">source</a><a href=\"#impl-Key-for-ParamEnv%3C'tcx%3E-2\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/query/keys/trait.Key.html\" title=\"trait rustc_middle::query::keys::Key\">Key</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.CacheSelector-610\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CacheSelector-610\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.CacheSelector\" class=\"associatedtype\">CacheSelector</a> = <a class=\"struct\" href=\"rustc_query_system/query/caches/struct.DefaultCacheSelector.html\" title=\"struct rustc_query_system::query::caches::DefaultCacheSelector\">DefaultCacheSelector</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_span-610\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#477-479\">source</a><a href=\"#method.default_span-610\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.default_span\" class=\"fn\">default_span</a>(&amp;self, _: <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'_&gt;) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class='docblock'>In the event that a cycle occurs, if no explicit span has been\ngiven for a query with key <code>self</code>, what span should we use?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.key_as_def_id-610\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#40-42\">source</a><a href=\"#method.key_as_def_id-610\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/keys/trait.Key.html#method.key_as_def_id\" class=\"fn\">key_as_def_id</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>&gt;</h4></section></summary><div class='docblock'>If the key is a <a href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\"><code>DefId</code></a> or <code>DefId</code>–equivalent, return that <code>DefId</code>.\nOtherwise, return <code>None</code>.</div></details><section id=\"method.ty_adt_id-610\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#44-46\">source</a><a href=\"#method.ty_adt_id-610\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/keys/trait.Key.html#method.ty_adt_id\" class=\"fn\">ty_adt_id</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>&gt;</h4></section></div></details>","Key","rustc_middle::query::queries::param_env_reveal_all_normalized::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Key-for-ParamEnv%3C'tcx%3E-3\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#474-480\">source</a><a href=\"#impl-Key-for-ParamEnv%3C'tcx%3E-3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/query/keys/trait.Key.html\" title=\"trait rustc_middle::query::keys::Key\">Key</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.CacheSelector-611\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.CacheSelector-611\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.CacheSelector\" class=\"associatedtype\">CacheSelector</a> = <a class=\"struct\" href=\"rustc_query_system/query/caches/struct.DefaultCacheSelector.html\" title=\"struct rustc_query_system::query::caches::DefaultCacheSelector\">DefaultCacheSelector</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_span-611\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#477-479\">source</a><a href=\"#method.default_span-611\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.default_span\" class=\"fn\">default_span</a>(&amp;self, _: <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'_&gt;) -&gt; <a class=\"struct\" href=\"rustc_span/span_encoding/struct.Span.html\" title=\"struct rustc_span::span_encoding::Span\">Span</a></h4></section></summary><div class='docblock'>In the event that a cycle occurs, if no explicit span has been\ngiven for a query with key <code>self</code>, what span should we use?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.key_as_def_id-611\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#40-42\">source</a><a href=\"#method.key_as_def_id-611\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/keys/trait.Key.html#method.key_as_def_id\" class=\"fn\">key_as_def_id</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>&gt;</h4></section></summary><div class='docblock'>If the key is a <a href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\"><code>DefId</code></a> or <code>DefId</code>–equivalent, return that <code>DefId</code>.\nOtherwise, return <code>None</code>.</div></details><section id=\"method.ty_adt_id-611\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/keys.rs.html#44-46\">source</a><a href=\"#method.ty_adt_id-611\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/query/keys/trait.Key.html#method.ty_adt_id\" class=\"fn\">ty_adt_id</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"rustc_span/def_id/struct.DefId.html\" title=\"struct rustc_span::def_id::DefId\">DefId</a>&gt;</h4></section></div></details>","Key","rustc_middle::query::queries::param_env_reveal_all_normalized::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3CE%3E-for-ParamEnv%3C'tcx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#167-172\">source</a><a href=\"#impl-Encodable%3CE%3E-for-ParamEnv%3C'tcx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx, E: <a class=\"trait\" href=\"rustc_middle/ty/trait.TyEncoder.html\" title=\"trait rustc_middle::ty::TyEncoder\">TyEncoder</a>&lt;I = <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;E&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.encode-282\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#168-171\">source</a><a href=\"#method.encode-282\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, e: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a>)</h4></section></div></details>","Encodable","rustc_middle::query::queries::param_env::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3CE%3E-for-ParamEnv%3C'tcx%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#167-172\">source</a><a href=\"#impl-Encodable%3CE%3E-for-ParamEnv%3C'tcx%3E-1\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx, E: <a class=\"trait\" href=\"rustc_middle/ty/trait.TyEncoder.html\" title=\"trait rustc_middle::ty::TyEncoder\">TyEncoder</a>&lt;I = <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;E&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.encode-283\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#168-171\">source</a><a href=\"#method.encode-283\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, e: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a>)</h4></section></div></details>","Encodable","rustc_middle::query::queries::param_env::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3CE%3E-for-ParamEnv%3C'tcx%3E-2\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#167-172\">source</a><a href=\"#impl-Encodable%3CE%3E-for-ParamEnv%3C'tcx%3E-2\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx, E: <a class=\"trait\" href=\"rustc_middle/ty/trait.TyEncoder.html\" title=\"trait rustc_middle::ty::TyEncoder\">TyEncoder</a>&lt;I = <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;E&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.encode-284\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#168-171\">source</a><a href=\"#method.encode-284\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, e: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a>)</h4></section></div></details>","Encodable","rustc_middle::query::queries::param_env_reveal_all_normalized::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Encodable%3CE%3E-for-ParamEnv%3C'tcx%3E-3\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#167-172\">source</a><a href=\"#impl-Encodable%3CE%3E-for-ParamEnv%3C'tcx%3E-3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx, E: <a class=\"trait\" href=\"rustc_middle/ty/trait.TyEncoder.html\" title=\"trait rustc_middle::ty::TyEncoder\">TyEncoder</a>&lt;I = <a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt; <a class=\"trait\" href=\"rustc_serialize/serialize/trait.Encodable.html\" title=\"trait rustc_serialize::serialize::Encodable\">Encodable</a>&lt;E&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.encode-285\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/codec.rs.html#168-171\">source</a><a href=\"#method.encode-285\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.encode\" class=\"fn\">encode</a>(&amp;self, e: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut E</a>)</h4></section></div></details>","Encodable","rustc_middle::query::queries::param_env_reveal_all_normalized::ProvidedValue"],["<section id=\"impl-StructuralEq-for-ParamEnv%3C'tcx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-StructuralEq-for-ParamEnv%3C'tcx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section>","StructuralEq","rustc_middle::query::queries::param_env::Value"],["<section id=\"impl-StructuralEq-for-ParamEnv%3C'tcx%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-StructuralEq-for-ParamEnv%3C'tcx%3E-1\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section>","StructuralEq","rustc_middle::query::queries::param_env::ProvidedValue"],["<section id=\"impl-StructuralEq-for-ParamEnv%3C'tcx%3E-2\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-StructuralEq-for-ParamEnv%3C'tcx%3E-2\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section>","StructuralEq","rustc_middle::query::queries::param_env_reveal_all_normalized::Value"],["<section id=\"impl-StructuralEq-for-ParamEnv%3C'tcx%3E-3\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-StructuralEq-for-ParamEnv%3C'tcx%3E-3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section>","StructuralEq","rustc_middle::query::queries::param_env_reveal_all_normalized::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CParamEnv%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-PartialEq%3CParamEnv%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq-558\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#method.eq-558\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne-558\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#231\">source</a></span><a href=\"#method.ne-558\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_middle::query::queries::param_env::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CParamEnv%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-PartialEq%3CParamEnv%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-1\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq-559\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#method.eq-559\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne-559\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#231\">source</a></span><a href=\"#method.ne-559\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_middle::query::queries::param_env::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CParamEnv%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-2\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-PartialEq%3CParamEnv%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-2\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq-560\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#method.eq-560\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne-560\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#231\">source</a></span><a href=\"#method.ne-560\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_middle::query::queries::param_env_reveal_all_normalized::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CParamEnv%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-3\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-PartialEq%3CParamEnv%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq-561\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#method.eq-561\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne-561\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#231\">source</a></span><a href=\"#method.ne-561\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","rustc_middle::query::queries::param_env_reveal_all_normalized::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3CStableHashingContext%3C'a%3E%3E-for-ParamEnv%3C'tcx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1663-1668\">source</a><a href=\"#impl-HashStable%3CStableHashingContext%3C'a%3E%3E-for-ParamEnv%3C'tcx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;<a class=\"struct\" href=\"rustc_query_system/ich/hcx/struct.StableHashingContext.html\" title=\"struct rustc_query_system::ich::hcx::StableHashingContext\">StableHashingContext</a>&lt;'a&gt;&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.hash_stable-165\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1664-1667\">source</a><a href=\"#method.hash_stable-165\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(\n    &amp;self,\n    hcx: &amp;mut <a class=\"struct\" href=\"rustc_query_system/ich/hcx/struct.StableHashingContext.html\" title=\"struct rustc_query_system::ich::hcx::StableHashingContext\">StableHashingContext</a>&lt;'a&gt;,\n    hasher: &amp;mut <a class=\"struct\" href=\"rustc_data_structures/stable_hasher/struct.StableHasher.html\" title=\"struct rustc_data_structures::stable_hasher::StableHasher\">StableHasher</a>\n)</h4></section></div></details>","HashStable","rustc_middle::query::queries::param_env::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3CStableHashingContext%3C'a%3E%3E-for-ParamEnv%3C'tcx%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1663-1668\">source</a><a href=\"#impl-HashStable%3CStableHashingContext%3C'a%3E%3E-for-ParamEnv%3C'tcx%3E-1\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;<a class=\"struct\" href=\"rustc_query_system/ich/hcx/struct.StableHashingContext.html\" title=\"struct rustc_query_system::ich::hcx::StableHashingContext\">StableHashingContext</a>&lt;'a&gt;&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.hash_stable-166\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1664-1667\">source</a><a href=\"#method.hash_stable-166\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(\n    &amp;self,\n    hcx: &amp;mut <a class=\"struct\" href=\"rustc_query_system/ich/hcx/struct.StableHashingContext.html\" title=\"struct rustc_query_system::ich::hcx::StableHashingContext\">StableHashingContext</a>&lt;'a&gt;,\n    hasher: &amp;mut <a class=\"struct\" href=\"rustc_data_structures/stable_hasher/struct.StableHasher.html\" title=\"struct rustc_data_structures::stable_hasher::StableHasher\">StableHasher</a>\n)</h4></section></div></details>","HashStable","rustc_middle::query::queries::param_env::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3CStableHashingContext%3C'a%3E%3E-for-ParamEnv%3C'tcx%3E-2\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1663-1668\">source</a><a href=\"#impl-HashStable%3CStableHashingContext%3C'a%3E%3E-for-ParamEnv%3C'tcx%3E-2\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;<a class=\"struct\" href=\"rustc_query_system/ich/hcx/struct.StableHashingContext.html\" title=\"struct rustc_query_system::ich::hcx::StableHashingContext\">StableHashingContext</a>&lt;'a&gt;&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.hash_stable-167\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1664-1667\">source</a><a href=\"#method.hash_stable-167\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(\n    &amp;self,\n    hcx: &amp;mut <a class=\"struct\" href=\"rustc_query_system/ich/hcx/struct.StableHashingContext.html\" title=\"struct rustc_query_system::ich::hcx::StableHashingContext\">StableHashingContext</a>&lt;'a&gt;,\n    hasher: &amp;mut <a class=\"struct\" href=\"rustc_data_structures/stable_hasher/struct.StableHasher.html\" title=\"struct rustc_data_structures::stable_hasher::StableHasher\">StableHasher</a>\n)</h4></section></div></details>","HashStable","rustc_middle::query::queries::param_env_reveal_all_normalized::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashStable%3CStableHashingContext%3C'a%3E%3E-for-ParamEnv%3C'tcx%3E-3\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1663-1668\">source</a><a href=\"#impl-HashStable%3CStableHashingContext%3C'a%3E%3E-for-ParamEnv%3C'tcx%3E-3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'tcx&gt; <a class=\"trait\" href=\"rustc_data_structures/stable_hasher/trait.HashStable.html\" title=\"trait rustc_data_structures::stable_hasher::HashStable\">HashStable</a>&lt;<a class=\"struct\" href=\"rustc_query_system/ich/hcx/struct.StableHashingContext.html\" title=\"struct rustc_query_system::ich::hcx::StableHashingContext\">StableHashingContext</a>&lt;'a&gt;&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.hash_stable-168\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1664-1667\">source</a><a href=\"#method.hash_stable-168\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.hash_stable\" class=\"fn\">hash_stable</a>(\n    &amp;self,\n    hcx: &amp;mut <a class=\"struct\" href=\"rustc_query_system/ich/hcx/struct.StableHashingContext.html\" title=\"struct rustc_query_system::ich::hcx::StableHashingContext\">StableHashingContext</a>&lt;'a&gt;,\n    hasher: &amp;mut <a class=\"struct\" href=\"rustc_data_structures/stable_hasher/struct.StableHasher.html\" title=\"struct rustc_data_structures::stable_hasher::StableHasher\">StableHasher</a>\n)</h4></section></div></details>","HashStable","rustc_middle::query::queries::param_env_reveal_all_normalized::ProvidedValue"],["<section id=\"impl-Copy-for-ParamEnv%3C'tcx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-Copy-for-ParamEnv%3C'tcx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section>","Copy","rustc_middle::query::queries::param_env::Value"],["<section id=\"impl-Copy-for-ParamEnv%3C'tcx%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-Copy-for-ParamEnv%3C'tcx%3E-1\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section>","Copy","rustc_middle::query::queries::param_env::ProvidedValue"],["<section id=\"impl-Copy-for-ParamEnv%3C'tcx%3E-2\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-Copy-for-ParamEnv%3C'tcx%3E-2\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section>","Copy","rustc_middle::query::queries::param_env_reveal_all_normalized::Value"],["<section id=\"impl-Copy-for-ParamEnv%3C'tcx%3E-3\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-Copy-for-ParamEnv%3C'tcx%3E-3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section>","Copy","rustc_middle::query::queries::param_env_reveal_all_normalized::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ParamEnv%3C'tcx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1654-1661\">source</a><a href=\"#impl-Debug-for-ParamEnv%3C'tcx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt-431\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1655-1660\">source</a><a href=\"#method.fmt-431\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_middle::query::queries::param_env::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ParamEnv%3C'tcx%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1654-1661\">source</a><a href=\"#impl-Debug-for-ParamEnv%3C'tcx%3E-1\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt-432\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1655-1660\">source</a><a href=\"#method.fmt-432\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_middle::query::queries::param_env::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ParamEnv%3C'tcx%3E-2\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1654-1661\">source</a><a href=\"#impl-Debug-for-ParamEnv%3C'tcx%3E-2\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt-433\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1655-1660\">source</a><a href=\"#method.fmt-433\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_middle::query::queries::param_env_reveal_all_normalized::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ParamEnv%3C'tcx%3E-3\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1654-1661\">source</a><a href=\"#impl-Debug-for-ParamEnv%3C'tcx%3E-3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt-434\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1655-1660\">source</a><a href=\"#method.fmt-434\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_middle::query::queries::param_env_reveal_all_normalized::ProvidedValue"],["<section id=\"impl-StructuralPartialEq-for-ParamEnv%3C'tcx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-StructuralPartialEq-for-ParamEnv%3C'tcx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section>","StructuralPartialEq","rustc_middle::query::queries::param_env::Value"],["<section id=\"impl-StructuralPartialEq-for-ParamEnv%3C'tcx%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-StructuralPartialEq-for-ParamEnv%3C'tcx%3E-1\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section>","StructuralPartialEq","rustc_middle::query::queries::param_env::ProvidedValue"],["<section id=\"impl-StructuralPartialEq-for-ParamEnv%3C'tcx%3E-2\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-StructuralPartialEq-for-ParamEnv%3C'tcx%3E-2\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section>","StructuralPartialEq","rustc_middle::query::queries::param_env_reveal_all_normalized::Value"],["<section id=\"impl-StructuralPartialEq-for-ParamEnv%3C'tcx%3E-3\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-StructuralPartialEq-for-ParamEnv%3C'tcx%3E-3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section>","StructuralPartialEq","rustc_middle::query::queries::param_env_reveal_all_normalized::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-ParamEnv%3C'tcx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#311-348\">source</a><a href=\"#impl-EraseType-for-ParamEnv%3C'tcx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result-892\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result-892\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::param_env::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-ParamEnv%3C'tcx%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#311-348\">source</a><a href=\"#impl-EraseType-for-ParamEnv%3C'tcx%3E-1\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result-893\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result-893\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::param_env::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-ParamEnv%3C'tcx%3E-2\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#311-348\">source</a><a href=\"#impl-EraseType-for-ParamEnv%3C'tcx%3E-2\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result-894\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result-894\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::param_env_reveal_all_normalized::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EraseType-for-ParamEnv%3C'tcx%3E-3\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/query/erase.rs.html#311-348\">source</a><a href=\"#impl-EraseType-for-ParamEnv%3C'tcx%3E-3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/query/erase/trait.EraseType.html\" title=\"trait rustc_middle::query::erase::EraseType\">EraseType</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Result-895\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Result-895\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"#associatedtype.Result\" class=\"associatedtype\">Result</a> = [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.array.html\">8</a>]</h4></section></div></details>","EraseType","rustc_middle::query::queries::param_env_reveal_all_normalized::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-ParamEnv%3C'tcx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-Hash-for-ParamEnv%3C'tcx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash-276\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#method.hash-276\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice-275\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice-275\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rustc_middle::query::queries::param_env::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-ParamEnv%3C'tcx%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-Hash-for-ParamEnv%3C'tcx%3E-1\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash-277\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#method.hash-277\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice-276\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice-276\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rustc_middle::query::queries::param_env::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-ParamEnv%3C'tcx%3E-2\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-Hash-for-ParamEnv%3C'tcx%3E-2\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash-278\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#method.hash-278\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice-277\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice-277\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rustc_middle::query::queries::param_env_reveal_all_normalized::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-ParamEnv%3C'tcx%3E-3\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-Hash-for-ParamEnv%3C'tcx%3E-3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash-279\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#method.hash-279\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice-278\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice-278\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","rustc_middle::query::queries::param_env_reveal_all_normalized::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeFoldable%3CTyCtxt%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1670-1680\">source</a><a href=\"#impl-TypeFoldable%3CTyCtxt%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::TypeFoldable\">TypeFoldable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold_with-359\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1671-1679\">source</a><a href=\"#method.try_fold_with-359\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.try_fold_with\" class=\"fn\">try_fold_with</a>&lt;F: <a class=\"trait\" href=\"rustc_middle/ty/trait.FallibleTypeFolder.html\" title=\"trait rustc_middle::ty::FallibleTypeFolder\">FallibleTypeFolder</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(\n    self,\n    folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, F::<a class=\"associatedtype\" href=\"rustc_middle/ty/trait.FallibleTypeFolder.html#associatedtype.Error\" title=\"type rustc_middle::ty::FallibleTypeFolder::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>The entry point for folding. To fold a value <code>t</code> with a folder <code>f</code>\ncall: <code>t.try_fold_with(f)</code>. <a href=\"#tymethod.try_fold_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with-371\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#76\">source</a><a href=\"#method.fold_with-371\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/trait.TypeFoldable.html#method.fold_with\" class=\"fn\">fold_with</a>&lt;F&gt;(self, folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>) -&gt; Self<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeFolder.html\" title=\"trait rustc_middle::ty::TypeFolder\">TypeFolder</a>&lt;I&gt;,</span></h4></section></summary><div class='docblock'>A convenient alternative to <code>try_fold_with</code> for use with infallible\nfolders. Do not override this method, to ensure coherence with\n<code>try_fold_with</code>.</div></details></div></details>","TypeFoldable","rustc_middle::query::queries::param_env::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeFoldable%3CTyCtxt%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1670-1680\">source</a><a href=\"#impl-TypeFoldable%3CTyCtxt%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-1\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::TypeFoldable\">TypeFoldable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold_with-360\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1671-1679\">source</a><a href=\"#method.try_fold_with-360\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.try_fold_with\" class=\"fn\">try_fold_with</a>&lt;F: <a class=\"trait\" href=\"rustc_middle/ty/trait.FallibleTypeFolder.html\" title=\"trait rustc_middle::ty::FallibleTypeFolder\">FallibleTypeFolder</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(\n    self,\n    folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, F::<a class=\"associatedtype\" href=\"rustc_middle/ty/trait.FallibleTypeFolder.html#associatedtype.Error\" title=\"type rustc_middle::ty::FallibleTypeFolder::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>The entry point for folding. To fold a value <code>t</code> with a folder <code>f</code>\ncall: <code>t.try_fold_with(f)</code>. <a href=\"#tymethod.try_fold_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with-372\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#76\">source</a><a href=\"#method.fold_with-372\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/trait.TypeFoldable.html#method.fold_with\" class=\"fn\">fold_with</a>&lt;F&gt;(self, folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>) -&gt; Self<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeFolder.html\" title=\"trait rustc_middle::ty::TypeFolder\">TypeFolder</a>&lt;I&gt;,</span></h4></section></summary><div class='docblock'>A convenient alternative to <code>try_fold_with</code> for use with infallible\nfolders. Do not override this method, to ensure coherence with\n<code>try_fold_with</code>.</div></details></div></details>","TypeFoldable","rustc_middle::query::queries::param_env::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeFoldable%3CTyCtxt%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-2\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1670-1680\">source</a><a href=\"#impl-TypeFoldable%3CTyCtxt%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-2\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::TypeFoldable\">TypeFoldable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold_with-361\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1671-1679\">source</a><a href=\"#method.try_fold_with-361\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.try_fold_with\" class=\"fn\">try_fold_with</a>&lt;F: <a class=\"trait\" href=\"rustc_middle/ty/trait.FallibleTypeFolder.html\" title=\"trait rustc_middle::ty::FallibleTypeFolder\">FallibleTypeFolder</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(\n    self,\n    folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, F::<a class=\"associatedtype\" href=\"rustc_middle/ty/trait.FallibleTypeFolder.html#associatedtype.Error\" title=\"type rustc_middle::ty::FallibleTypeFolder::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>The entry point for folding. To fold a value <code>t</code> with a folder <code>f</code>\ncall: <code>t.try_fold_with(f)</code>. <a href=\"#tymethod.try_fold_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with-373\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#76\">source</a><a href=\"#method.fold_with-373\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/trait.TypeFoldable.html#method.fold_with\" class=\"fn\">fold_with</a>&lt;F&gt;(self, folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>) -&gt; Self<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeFolder.html\" title=\"trait rustc_middle::ty::TypeFolder\">TypeFolder</a>&lt;I&gt;,</span></h4></section></summary><div class='docblock'>A convenient alternative to <code>try_fold_with</code> for use with infallible\nfolders. Do not override this method, to ensure coherence with\n<code>try_fold_with</code>.</div></details></div></details>","TypeFoldable","rustc_middle::query::queries::param_env_reveal_all_normalized::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeFoldable%3CTyCtxt%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-3\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1670-1680\">source</a><a href=\"#impl-TypeFoldable%3CTyCtxt%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeFoldable.html\" title=\"trait rustc_middle::ty::TypeFoldable\">TypeFoldable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_fold_with-362\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1671-1679\">source</a><a href=\"#method.try_fold_with-362\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.try_fold_with\" class=\"fn\">try_fold_with</a>&lt;F: <a class=\"trait\" href=\"rustc_middle/ty/trait.FallibleTypeFolder.html\" title=\"trait rustc_middle::ty::FallibleTypeFolder\">FallibleTypeFolder</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(\n    self,\n    folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, F::<a class=\"associatedtype\" href=\"rustc_middle/ty/trait.FallibleTypeFolder.html#associatedtype.Error\" title=\"type rustc_middle::ty::FallibleTypeFolder::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>The entry point for folding. To fold a value <code>t</code> with a folder <code>f</code>\ncall: <code>t.try_fold_with(f)</code>. <a href=\"#tymethod.try_fold_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold_with-374\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_type_ir/fold.rs.html#76\">source</a><a href=\"#method.fold_with-374\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"rustc_middle/ty/trait.TypeFoldable.html#method.fold_with\" class=\"fn\">fold_with</a>&lt;F&gt;(self, folder: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut F</a>) -&gt; Self<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeFolder.html\" title=\"trait rustc_middle::ty::TypeFolder\">TypeFolder</a>&lt;I&gt;,</span></h4></section></summary><div class='docblock'>A convenient alternative to <code>try_fold_with</code> for use with infallible\nfolders. Do not override this method, to ensure coherence with\n<code>try_fold_with</code>.</div></details></div></details>","TypeFoldable","rustc_middle::query::queries::param_env_reveal_all_normalized::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeVisitable%3CTyCtxt%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1682-1687\">source</a><a href=\"#impl-TypeVisitable%3CTyCtxt%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitable.html\" title=\"trait rustc_middle::ty::TypeVisitable\">TypeVisitable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with-363\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1683-1686\">source</a><a href=\"#method.visit_with-363\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.visit_with\" class=\"fn\">visit_with</a>&lt;V: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitor.html\" title=\"trait rustc_middle::ty::TypeVisitor\">TypeVisitor</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(\n    &amp;self,\n    visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/control_flow/enum.ControlFlow.html\" title=\"enum core::ops::control_flow::ControlFlow\">ControlFlow</a>&lt;V::<a class=\"associatedtype\" href=\"rustc_middle/ty/trait.TypeVisitor.html#associatedtype.BreakTy\" title=\"type rustc_middle::ty::TypeVisitor::BreakTy\">BreakTy</a>&gt;</h4></section></summary><div class='docblock'>The entry point for visiting. To visit a value <code>t</code> with a visitor <code>v</code>\ncall: <code>t.visit_with(v)</code>. <a href=\"#tymethod.visit_with\">Read more</a></div></details></div></details>","TypeVisitable","rustc_middle::query::queries::param_env::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeVisitable%3CTyCtxt%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1682-1687\">source</a><a href=\"#impl-TypeVisitable%3CTyCtxt%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-1\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitable.html\" title=\"trait rustc_middle::ty::TypeVisitable\">TypeVisitable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with-364\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1683-1686\">source</a><a href=\"#method.visit_with-364\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.visit_with\" class=\"fn\">visit_with</a>&lt;V: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitor.html\" title=\"trait rustc_middle::ty::TypeVisitor\">TypeVisitor</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(\n    &amp;self,\n    visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/control_flow/enum.ControlFlow.html\" title=\"enum core::ops::control_flow::ControlFlow\">ControlFlow</a>&lt;V::<a class=\"associatedtype\" href=\"rustc_middle/ty/trait.TypeVisitor.html#associatedtype.BreakTy\" title=\"type rustc_middle::ty::TypeVisitor::BreakTy\">BreakTy</a>&gt;</h4></section></summary><div class='docblock'>The entry point for visiting. To visit a value <code>t</code> with a visitor <code>v</code>\ncall: <code>t.visit_with(v)</code>. <a href=\"#tymethod.visit_with\">Read more</a></div></details></div></details>","TypeVisitable","rustc_middle::query::queries::param_env::ProvidedValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeVisitable%3CTyCtxt%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-2\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1682-1687\">source</a><a href=\"#impl-TypeVisitable%3CTyCtxt%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-2\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitable.html\" title=\"trait rustc_middle::ty::TypeVisitable\">TypeVisitable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with-365\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1683-1686\">source</a><a href=\"#method.visit_with-365\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.visit_with\" class=\"fn\">visit_with</a>&lt;V: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitor.html\" title=\"trait rustc_middle::ty::TypeVisitor\">TypeVisitor</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(\n    &amp;self,\n    visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/control_flow/enum.ControlFlow.html\" title=\"enum core::ops::control_flow::ControlFlow\">ControlFlow</a>&lt;V::<a class=\"associatedtype\" href=\"rustc_middle/ty/trait.TypeVisitor.html#associatedtype.BreakTy\" title=\"type rustc_middle::ty::TypeVisitor::BreakTy\">BreakTy</a>&gt;</h4></section></summary><div class='docblock'>The entry point for visiting. To visit a value <code>t</code> with a visitor <code>v</code>\ncall: <code>t.visit_with(v)</code>. <a href=\"#tymethod.visit_with\">Read more</a></div></details></div></details>","TypeVisitable","rustc_middle::query::queries::param_env_reveal_all_normalized::Value"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeVisitable%3CTyCtxt%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-3\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1682-1687\">source</a><a href=\"#impl-TypeVisitable%3CTyCtxt%3C'tcx%3E%3E-for-ParamEnv%3C'tcx%3E-3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitable.html\" title=\"trait rustc_middle::ty::TypeVisitable\">TypeVisitable</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt; for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.visit_with-366\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1683-1686\">source</a><a href=\"#method.visit_with-366\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"#tymethod.visit_with\" class=\"fn\">visit_with</a>&lt;V: <a class=\"trait\" href=\"rustc_middle/ty/trait.TypeVisitor.html\" title=\"trait rustc_middle::ty::TypeVisitor\">TypeVisitor</a>&lt;<a class=\"struct\" href=\"rustc_middle/ty/context/struct.TyCtxt.html\" title=\"struct rustc_middle::ty::context::TyCtxt\">TyCtxt</a>&lt;'tcx&gt;&gt;&gt;(\n    &amp;self,\n    visitor: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut V</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/ops/control_flow/enum.ControlFlow.html\" title=\"enum core::ops::control_flow::ControlFlow\">ControlFlow</a>&lt;V::<a class=\"associatedtype\" href=\"rustc_middle/ty/trait.TypeVisitor.html#associatedtype.BreakTy\" title=\"type rustc_middle::ty::TypeVisitor::BreakTy\">BreakTy</a>&gt;</h4></section></summary><div class='docblock'>The entry point for visiting. To visit a value <code>t</code> with a visitor <code>v</code>\ncall: <code>t.visit_with(v)</code>. <a href=\"#tymethod.visit_with\">Read more</a></div></details></div></details>","TypeVisitable","rustc_middle::query::queries::param_env_reveal_all_normalized::ProvidedValue"],["<section id=\"impl-Eq-for-ParamEnv%3C'tcx%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-Eq-for-ParamEnv%3C'tcx%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section>","Eq","rustc_middle::query::queries::param_env::Value"],["<section id=\"impl-Eq-for-ParamEnv%3C'tcx%3E-1\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-Eq-for-ParamEnv%3C'tcx%3E-1\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section>","Eq","rustc_middle::query::queries::param_env::ProvidedValue"],["<section id=\"impl-Eq-for-ParamEnv%3C'tcx%3E-2\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-Eq-for-ParamEnv%3C'tcx%3E-2\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section>","Eq","rustc_middle::query::queries::param_env_reveal_all_normalized::Value"],["<section id=\"impl-Eq-for-ParamEnv%3C'tcx%3E-3\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_middle/ty/mod.rs.html#1626\">source</a><a href=\"#impl-Eq-for-ParamEnv%3C'tcx%3E-3\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'tcx&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"rustc_middle/ty/struct.ParamEnv.html\" title=\"struct rustc_middle::ty::ParamEnv\">ParamEnv</a>&lt;'tcx&gt;</h3></section>","Eq","rustc_middle::query::queries::param_env_reveal_all_normalized::ProvidedValue"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()